"""empty message

Revision ID: f33c3a684f82
Revises: 4ad95e6eb5d6
Create Date: 2023-06-04 14:24:06.785355

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f33c3a684f82'
down_revision = '4ad95e6eb5d6'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Klines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('low', sa.DECIMAL(precision=8, scale=2), nullable=True),
    sa.Column('high', sa.DECIMAL(precision=8, scale=2), nullable=True),
    sa.Column('open', sa.DECIMAL(precision=8, scale=2), nullable=True),
    sa.Column('close', sa.DECIMAL(precision=8, scale=2), nullable=True),
    sa.Column('volume', sa.DECIMAL(precision=14, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['Stocks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Klines_id'), 'Klines', ['id'], unique=True)
    op.create_table('Transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('price', sa.DECIMAL(precision=8, scale=2), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('type', sa.Enum('BUY', 'HOLD', 'SELL', 'DO_NOTHING', name='botaction'), nullable=True),
    sa.ForeignKeyConstraint(['bot_id'], ['Bots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Transactions_id'), 'Transactions', ['id'], unique=True)
    # op.drop_index('ix_BotParametersTypes_id', table_name='BotParametersTypes')
    # op.drop_table('BotParametersTypes')
    # op.drop_index('ix_BotParametersValues_id', table_name='BotParametersValues')
    # op.drop_table('BotParametersValues')
    # op.drop_index('ix_DataTypes_id', table_name='DataTypes')
    # op.drop_table('DataTypes')
    op.add_column('BotTypes', sa.Column('parameters_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.drop_column('BotTypes', 'description')
    op.add_column('Bots', sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('Bots', sa.Column('max_money_to_invest', sa.DECIMAL(precision=10, scale=2), nullable=True))
    op.add_column('Bots', sa.Column('max_level', sa.DECIMAL(precision=8, scale=2), nullable=True))
    op.add_column('Bots', sa.Column('min_level', sa.DECIMAL(precision=8, scale=2), nullable=True))
    op.drop_column('Bots', 'description')
    op.drop_column('Bots', 'name')
    op.drop_column('Bots', 'some_general_attribute')
    op.drop_column('Stocks', 'high')
    op.drop_column('Stocks', 'open')
    op.drop_column('Stocks', 'close')
    op.drop_column('Stocks', 'dates')
    op.drop_column('Stocks', 'low')
    op.drop_column('Stocks', 'volume')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('Stocks', sa.Column('volume', sa.NUMERIC(precision=8, scale=0), autoincrement=False, nullable=True))
    op.add_column('Stocks', sa.Column('low', sa.NUMERIC(precision=12, scale=0), autoincrement=False, nullable=True))
    op.add_column('Stocks', sa.Column('dates', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('Stocks', sa.Column('close', sa.NUMERIC(precision=12, scale=0), autoincrement=False, nullable=True))
    op.add_column('Stocks', sa.Column('open', sa.NUMERIC(precision=12, scale=0), autoincrement=False, nullable=True))
    op.add_column('Stocks', sa.Column('high', sa.NUMERIC(precision=12, scale=0), autoincrement=False, nullable=True))
    op.add_column('Bots', sa.Column('some_general_attribute', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('Bots', sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('Bots', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column('Bots', 'min_level')
    op.drop_column('Bots', 'max_level')
    op.drop_column('Bots', 'max_money_to_invest')
    op.drop_column('Bots', 'parameters')
    op.add_column('BotTypes', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column('BotTypes', 'parameters_schema')
    op.create_table('DataTypes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"DataTypes_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='DataTypes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_DataTypes_id', 'DataTypes', ['id'], unique=False)
    op.create_table('BotParametersValues',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"BotParametersValues_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('bot_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bot_parameters_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('value', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bot_id'], ['Bots.id'], name='BotParametersValues_bot_id_fkey'),
    sa.ForeignKeyConstraint(['bot_parameters_type_id'], ['BotParametersTypes.id'], name='BotParametersValues_bot_parameters_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='BotParametersValues_pkey')
    )
    op.create_index('ix_BotParametersValues_id', 'BotParametersValues', ['id'], unique=False)
    op.create_table('BotParametersTypes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"BotParametersTypes_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('bot_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bot_type_id'], ['BotTypes.id'], name='BotParametersTypes_bot_type_id_fkey'),
    sa.ForeignKeyConstraint(['type_id'], ['DataTypes.id'], name='BotParametersTypes_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='BotParametersTypes_pkey')
    )
    op.create_index('ix_BotParametersTypes_id', 'BotParametersTypes', ['id'], unique=False)
    op.drop_index(op.f('ix_Transactions_id'), table_name='Transactions')
    op.drop_table('Transactions')
    op.drop_index(op.f('ix_Klines_id'), table_name='Klines')
    op.drop_table('Klines')
    # ### end Alembic commands ###
